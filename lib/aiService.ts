import OpenAI from 'openai';

const openai = new OpenAI({
  apiKey: process.env.OPENAI_API_KEY,
});

export const aiService = {
  async isProductAmbiguous(title: string, category: string): Promise<boolean> {
    try {
      const response = await openai.chat.completions.create({
        model: "gpt-3.5-turbo",
        messages: [
          {
            role: "system",
            content: "You are a product analyzer. Determine if a product title and category combination is ambiguous or unclear. Return only 'true' if ambiguous or 'false' if clear."
          },
          {
            role: "user",
            content: `Title: "${title}", Category: "${category}". Is this product information ambiguous?`
          }
        ],
        max_tokens: 10,
        temperature: 0.1
      });

      const result = response.choices[0]?.message?.content?.toLowerCase().trim();
      return result === 'true';
    } catch (error) {
      console.error('AI ambiguity check failed:', error);
      return false;
    }
  },

  async generateProductDescription(title: string, category: string): Promise<string> {
    try {
      const response = await openai.chat.completions.create({
        model: "gpt-3.5-turbo",
        messages: [
          {
            role: "system",
            content: "You are a product description writer. Generate compelling, SEO-friendly product descriptions that highlight key features and benefits. Keep it concise but informative (2-3 sentences)."
          },
          {
            role: "user",
            content: `Generate a product description for: Title: "${title}", Category: "${category}"`
          }
        ],
        max_tokens: 150,
        temperature: 0.7
      });

      return response.choices[0]?.message?.content || "Product description generated by AI.";
    } catch (error) {
      console.error('AI description generation failed:', error);
      return "Quality product in the " + category + " category.";
    }
  }
};